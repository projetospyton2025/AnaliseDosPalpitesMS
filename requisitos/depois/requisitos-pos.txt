(venv) PS J:\Meu Drive\ProjetosPython\Loterias\Estrategias\MegaSena\AnaliseDosPalpitesMS> dir


    Diretório: J:\Meu Drive\ProjetosPython\Loterias\Estrategias\MegaSena\AnaliseDosPalpitesMS


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
d-----        03/03/2025     07:18                requisitos
d-----        03/03/2025     07:33                static
d-----        03/03/2025     08:30                templates
d-----        03/03/2025     07:33                venv
------        03/03/2025     07:17           1096 LICENSE
------        03/03/2025     07:17             22 README.md
------        03/03/2025     07:33             17 requirements.txt
------        03/03/2025     08:33            342 app.py
------        03/03/2025     07:33            198 start.bat
------        03/03/2025     07:33            200 app.py.bak

from flask import Flask, render_template
import os


app = Flask(__name__)

@app.route('/')
def index():
    return render_template('index.html')

"""
if __name__ == '__main__':
    app.run(debug=True)
"""



if __name__ == '__main__':
    port = int(os.environ.get("PORT", 10000))
    app.run(host="0.0.0.0", port=port)
	
	<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Análise de Palpites da Mega Sena</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='css/style.css') }}">
</head>
<body>
    <div class="container">
        <header>
            <h1>Análise de Palpites da Mega Sena</h1>
            <p>Digite seus palpites e descubra QUANTOS e QUAIS dígitos foram usado.</p>
        </header>


        <main>
            <section class="palpites-section">
                <h2>Seus Palpites</h2>
                <div id="palpites-container">
                    <div class="palpite-row">
                        <div class="numeros-container">
                            <input type="number" min="1" max="60" class="numero-input" placeholder="Nº 1" required>
                            <input type="number" min="1" max="60" class="numero-input" placeholder="Nº 2" required>
                            <input type="number" min="1" max="60" class="numero-input" placeholder="Nº 3" required>
                            <input type="number" min="1" max="60" class="numero-input" placeholder="Nº 4" required>
                            <input type="number" min="1" max="60" class="numero-input" placeholder="Nº 5" required>
                            <input type="number" min="1" max="60" class="numero-input" placeholder="Nº 6" required>
                        </div>
                        <div class="analise-container">
                            <!-- Aqui serÃ£o exibidos os resultados da Análise -->
                        </div>
                    </div>
                </div>
            </section>
        </main>

    <footer>Feito por: <i>Márcio Fernando Maia -  Todos os direitos reservado - 2025</footer>

    </div>

    <script src="{{ url_for('static', filename='js/script.js') }}"></script>
</body>
</html>


// VariÃ¡veis globais
const palpitesContainer = document.getElementById('palpites-container');
let palpiteCount = 1;

// FunÃ§Ã£o para inicializar os handlers da pÃ¡gina
function init() {
    // Adiciona event listeners para o primeiro conjunto de inputs
    adicionarEventListenersParaInputs(palpitesContainer.querySelector('.palpite-row'));
}

// Função para adicionar uma nova linha de palpites
function adicionarNovaPalpiteRow() {
    palpiteCount++;
    
    const novaPalpiteRow = document.createElement('div');
    novaPalpiteRow.className = 'palpite-row';
    novaPalpiteRow.innerHTML = `
        <div class="numeros-container">
            <input type="number" min="1" max="60" class="numero-input" placeholder="Nº 1" required>
            <input type="number" min="1" max="60" class="numero-input" placeholder="Nº 2" required>
            <input type="number" min="1" max="60" class="numero-input" placeholder="Nº 3" required>
            <input type="number" min="1" max="60" class="numero-input" placeholder="Nº 4" required>
            <input type="number" min="1" max="60" class="numero-input" placeholder="Nº 5" required>
            <input type="number" min="1" max="60" class="numero-input" placeholder="Nº 6" required>
        </div>
        <div class="analise-container">
            <!-- Aqui serão exibidos os resultados da análise -->
        </div>
    `;
    
    palpitesContainer.appendChild(novaPalpiteRow);
    adicionarEventListenersParaInputs(novaPalpiteRow);
}

// FunÃ§Ã£o para adicionar event listeners aos inputs de uma linha de palpites
function adicionarEventListenersParaInputs(palpiteRow) {
    const inputs = palpiteRow.querySelectorAll('.numero-input');
    const analiseContainer = palpiteRow.querySelector('.analise-container');
    
    inputs.forEach((input, index) => {
        // ValidaÃ§Ã£o em tempo real
        input.addEventListener('input', function() {
            validarInput(input, inputs, index);
        });
        
        // Quando o Ãºltimo input for preenchido, adiciona uma nova linha
        if (index === inputs.length - 1) {
            input.addEventListener('change', function() {
                if (estaPreenchidoCorretamente(inputs)) {
                    // Faz a anÃ¡lise do palpite
                    analisarPalpite(inputs, analiseContainer);
                    
                    // Adiciona uma nova linha de palpites
                    adicionarNovaPalpiteRow();
                }
            });
        }
    });
}

// FunÃ§Ã£o para validar um input individual
function validarInput(input, allInputs, currentIndex) {
    // Limpa classes de validaÃ§Ã£o
    input.classList.remove('valid', 'invalid');
    
    const valor = parseInt(input.value);
    
    // Verifica se estÃ¡ vazio
    if (!input.value.trim()) {
        return;
    }
    
    // Verifica se estÃ¡ no intervalo vÃ¡lido
    if (isNaN(valor) || valor < 1 || valor > 60) {
        input.classList.add('invalid');
        return;
    }
    
    // Verifica se hÃ¡ nÃºmeros repetidos
    for (let i = 0; i < allInputs.length; i++) {
        if (i !== currentIndex && parseInt(allInputs[i].value) === valor) {
            input.classList.add('invalid');
            return;
        }
    }
    
    // Se passou por todas as validaÃ§Ãµes, marca como vÃ¡lido
    input.classList.add('valid');
}

// FunÃ§Ã£o para verificar se todos os inputs estÃ£o preenchidos corretamente
function estaPreenchidoCorretamente(inputs) {
    for (let input of inputs) {
        if (!input.value || input.classList.contains('invalid')) {
            return false;
        }
    }
    return true;
}

// FunÃ§Ã£o para analisar o palpite completo
function analisarPalpite(inputs, analiseContainer) {
    // Coleta os nÃºmeros
    const numeros = Array.from(inputs).map(input => parseInt(input.value));
    
    // Analisa quantos dÃ­gitos diferentes foram usados
    const digitosUsados = new Set();
    numeros.forEach(numero => {
        const digitos = numero.toString().padStart(2, '0').split('');
        digitos.forEach(digito => digitosUsados.add(digito));
    });
    
    // Cria o HTML da anÃ¡lise
    const analiseHTML = `
        <h3>Análise do Palpite</h3>
        <p><strong>Dígitos utilizados (${digitosUsados.size}):</strong></p>
        <div class="numeros-usados">
            ${Array.from(digitosUsados).sort().map(digito => 
                `<span class="numero-usado">${digito}</span>`
            ).join('')}
        </div>
    `;
    
    // Atualiza o container de anÃ¡lise
    analiseContainer.innerHTML = analiseHTML;
}

// Inicializa a pÃ¡gina quando o DOM estiver carregado
document.addEventListener('DOMContentLoaded', init);

/* Reset e estilos bÃ¡sicos */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --primary-color: #209869; /* Verde Mega Sena */
    --secondary-color: #1b7a54;
    --accent-color: #f8c300; /* Amarelo */
    --text-color: #333;
    --light-bg: #f5f5f5;
    --error-color: #e74c3c;
    --success-color: #2ecc71;
    --border-radius: 4px;
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    line-height: 1.6;
    color: var(--text-color);
    background-color: var(--light-bg);
}

.container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 20px;
}

/* Header */
header {
    text-align: center;
    margin-bottom: 30px;
}

header h1 {
    color: var(--primary-color);
    margin-bottom: 10px;
}

/* SeÃ§Ãµes */
section {
    background-color: white;
    border-radius: var(--border-radius);
    padding: 20px;
    margin-bottom: 20px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

h2 {
    color: var(--primary-color);
    margin-bottom: 20px;
}

/* Inputs de nÃºmeros */
.numeros-container {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-bottom: 20px;
}

.numero-input {
    width: 70px;
    height: 70px;
    border: 2px solid #ddd;
    border-radius: 50%;
    text-align: center;
    font-size: 1.5rem;
    font-weight: bold;
    transition: all 0.3s ease;
}

.numero-input:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 2px rgba(32, 152, 105, 0.3);
}

.numero-input.valid {
    background-color: rgba(46, 204, 113, 0.1);
    border-color: var(--success-color);
}

.numero-input.invalid {
    background-color: rgba(231, 76, 60, 0.1);
    border-color: var(--error-color);
}

/* Linhas de palpites */
.palpite-row {
    border-bottom: 1px solid #eee;
    padding-bottom: 20px;
    margin-bottom: 20px;
}

.palpite-row:last-child {
    border-bottom: none;
    margin-bottom: 0;
}

/* AnÃ¡lise dos palpites */
.analise-container {
    background-color: #f9f9f9;
    padding: 15px;
    border-radius: var(--border-radius);
    margin-top: 10px;
}

.numeros-usados {
    display: flex;
    flex-wrap: wrap;
    gap: 5px;
    margin-top: 10px;
}

.numero-usado {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 30px;
    height: 30px;
    background-color: var(--primary-color);
    color: white;
    border-radius: 50%;
    font-weight: bold;
}

/* Footer */
footer {
    color: #161515;
    text-align: center;
    padding: 5px;
    margin-bottom: auto;
    margin-top: 10px; /* Espaço acima do rodapé */
    }

/* Responsividade */
@media (max-width: 768px) {
    .numeros-container {
        justify-content: center;
    }
    
    .numero-input {
        width: 60px;
        height: 60px;
        font-size: 1.2rem;
    }
}

@media (max-width: 480px) {
    .numero-input {
        width: 50px;
        height: 50px;
        font-size: 1rem;
    }
}


